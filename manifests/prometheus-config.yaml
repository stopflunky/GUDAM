apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      imagePullSecrets:
      - name: dockerhub-secret 
      containers:
      - name: prometheus-container
        image: danilo238/gudam:gudam-prometheus
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus"
        resources:
          requests:
            cpu: "500m"
            memory: "256Mi"
            ephemeral-storage: "1Gi"
          limits:
            cpu: "1"
            memory: "512Mi"
            ephemeral-storage: "2Gi"
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-rules
          mountPath: /etc/prometheus/alert.rules
          subPath: alert.rules
        - name: prometheus-data 
          mountPath: /prometheus
        ports:
        - containerPort: 9090
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-rules
        configMap:
          name: prometheus-rules
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-peristent-volume-claim



---
  
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  labels:
    app: prometheus
  namespace: default
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s

    rule_files:
      - "/etc/prometheus/alert.rules"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - 'alertmanager-service:9093'

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['prometheus-service:9090']
      - job_name: 'data-collector'
        static_configs:
          - targets: ['datacollector-service:50056']
      - job_name: 'server'
        static_configs:
          - targets: ['grpc-server-service:9999']
      - job_name: 'alert-system'
        static_configs:
          - targets: ['alert-system-service:50057']
      - job_name: 'alert-notifier'
        static_configs:
          - targets: ['alert-notifier-system-service:50058']

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  labels:
    app: prometheus
  namespace: default
data:
  alert.rules: |
    groups:
      - name: ServerAlerts
        rules:
          - alert: HighRequestCount
            expr: s_request_counter_total > 10
            for: 10s
            labels:
              severity: critical
            annotations:
              summary: "Numero elevato di richieste"
              description: "Il numero totale di richieste HTTP ha superato 10 nel sistema."
          - alert: HighUserCount
            expr: s_user_counter > 3
            for: 10s
            labels:
              severity: critical
            annotations:
              summary: "Numero elevato di utenti"
              description: "Il numero di utenti connessi ha superato 3 nel sistema."

      - name: DataCollectorAlerts
        rules:
          - alert: HighTickersCount
            expr: dc_tickers_count > 100
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "Numero elevato di tickers"
              description: "Il numero di tickers letti dal database ha superato 100. Verifica il sistema."
          - alert: HighMessagesCount
            expr: rate(dc_messages_count[1m]) > 50 
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Numero elevato di messaggi inviati"
              description: "Il sistema ha inviato più di 50 messaggi al minuto. Potrebbe esserci un problema con il flusso dati."
    
      - name: AlertSystemAlerts
        rules:
          - alert: HighMessageProcessingTime
            expr: as_message_processing_time > 1
            for: 30s
            labels:
              severity: warning
            annotations:
              summary: "Tempo elevato di elaborazione messaggi"
              description: "Il tempo medio per processare un messaggio ha superato 1 secondo. Controllare il sistema."
          - alert: HighMessagesConsumed
            expr: rate(as_message_consumed_time[1m]) > 100
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Numero elevato di messaggi consumati"
              description: "Più di 100 messaggi al minuto sono stati consumati dal topic Kafka. Verificare l'integrità del sistema."
          - alert: HighMessagesProduced
            expr: rate(as_message_produced_time[1m]) > 100
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Numero elevato di messaggi prodotti"
              description: "Più di 100 messaggi al minuto sono stati prodotti per il sistema di notifica. Controllare il flusso di notifica."

      - name: AlertToNotifierSystemAlerts
        rules:
          - alert: HighFailedEmailCount
            expr: ans_email_processing_time > 30s
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Tempo di invio email fallito"
              description: "Più di 30 secondi sono passati per l'invio di una singola mail."

          - alert: HighSentEmailCount
            expr: ans_sent_emails_count > 100
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Numero elevato di email inviate"
              description: "Il sistema ha inviato più di 100 email al minuto. Controllare il flusso di invio email."



---


apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  labels:
    app: prometheus
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
  - name: http
    protocol: TCP
    port: 9090
    targetPort: 9090
    nodePort: 30002

---


apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-peristent-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
